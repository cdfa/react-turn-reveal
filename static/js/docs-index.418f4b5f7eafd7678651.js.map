{"version":3,"sources":["/home/cdfa/Projects/react-turn-reveal/README.md","/home/cdfa/Projects/react-turn-reveal/docs/index.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"wkBAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,eAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,qBAAG,6BAAGC,WAAW,KAAQ,CACrB,KAAQ,0DACP,mBAAKC,IAAI,eAAeC,IAAI,0DAFjC,KAGF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,mDACP,mBAAKC,IAAI,WAAWC,IAAI,yEAL7B,KAMF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,iDACP,mBAAKC,IAAI,UAAUC,IAAI,oEAR5B,KASF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,+DACP,mBAAKC,IAAI,OAAOC,IAAI,gFAXzB,KAYF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,2EACP,mBAAKC,IAAI,iBAAiBC,IAAI,qFAdnC,KAeF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,0BACP,mBAAKC,IAAI,oBAAoBC,IAAI,wEAjBtC,KAkBF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,mDACP,mBAAKC,IAAI,4BAA4BC,IAAI,4FApB9C,KAqBF,6BAAGF,WAAW,KAAQ,CAChB,KAAQ,gCACP,mBAAKC,IAAI,cAAcC,IAAI,iFAChC,8BACE,iBAAGF,WAAW,cAAd,6CAEF,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2CAIL,iBAAQ,CACN,GAAM,SADR,SAGA,4BAAW,6BAAGA,WAAW,KAAQ,CAC7B,KAAQ,8CADD,iCAAX,sCAGA,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,ubAmBL,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wVAeL,iBAAQ,CACN,GAAM,oBADR,oBAGA,qCAAoB,6BAAGA,WAAW,KAAQ,CACtC,KAAQ,6CADQ,6CAGpB,iBAAQ,CACN,GAAM,eADR,eAGA,sBACE,kBAAIA,WAAW,MAAf,iHACA,kBAAIA,WAAW,MAAf,4RAEyE,0BAAYA,WAAW,MAAvB,aAFzE,gKAI8B,0BAAYA,WAAW,MAAvB,aAJ9B,0DAMF,iBAAQ,CACN,GAAM,gBADR,gBAGA,4BAAW,6BAAGA,WAAW,KAAQ,CAC7B,KAAQ,sBADD,oBAGX,iBAAQ,CACN,GAAM,WADR,WAGA,0CAAsB,6BAAGA,WAAW,KAAQ,CACxC,KAAQ,4BADU,U,+JAO1BJ,EAAWO,gBAAiB,E,wCClI5B,IAKMT,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAAC,EAAD,eAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,YAAC,EAAD,CAAQA,QAAQ,Y,oKAKpBH,EAAWO,gBAAiB","file":"static/js/docs-index.7e963281.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-turn-reveal\"\n    }}>{`react-turn-reveal`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@cdfa/react-turn-reveal\"\n      }}><img alt=\"npm (scoped)\" src=\"https://img.shields.io/npm/v/@cdfa/react-turn-reveal\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://circleci.com/gh/cdfa/react-turn-reveal\"\n      }}><img alt=\"CircleCI\" src=\"https://img.shields.io/circleci/build/github/cdfa/react-turn-reveal\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/cdfa/react-turn-reveal\"\n      }}><img alt=\"CodeCov\" src=\"https://img.shields.io/codecov/c/github/cdfa/react-turn-reveal\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://lgtm.com/projects/g/cdfa/react-turn-reveal/alerts/\"\n      }}><img alt=\"LGTM\" src=\"https://img.shields.io/lgtm/grade/javascript/github/cdfa/react-turn-reveal\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://deepscan.io/dashboard#view=project&tid=4893&pid=6663&bid=57089\"\n      }}><img alt=\"DeepScan grade\" src=\"https://deepscan.io/api/teams/4893/projects/6663/branches/57089/badge/grade.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://standardjs.com\"\n      }}><img alt=\"js-standard-style\" src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/RichardLitt/standard-readme\"\n      }}><img alt=\"standard-readme compliant\" src=\"https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://makeapullrequest.com\"\n      }}><img alt=\"PRs Welcome\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" /></a></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A 3D reveal animation library for React.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install --save react-turn-reveal\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://cdfa.github.io/react-turn-reveal/\"\n      }}>{`the interactive documentation`}</a>{` for demonstrative usage examples.`}</p>\n    <h3 {...{\n      \"id\": \"turnreveal\"\n    }}>{`TurnReveal`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import TurnReveal, { Direction, Pose } from \"react-turn-reveal\";\n\nconst perspective = 400;\n\nconst YourComponent = () => (\n  <div style={{ position: \"relative\", perspective: perspective + \"px\" }}>\n    <TurnReveal\n      pose={Pose.closed}\n      direction={Direction.right}\n      perspective={perspective}\n    >\n      <div>Lorem ipsum</div>\n    </TurnReveal>\n    <img src=\"background.png\" alt=\"background\" />\n  </div>\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"followreveal\"\n    }}>{`FollowReveal`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import FollowReveal from \"react-turn-reveal\";\n\nconst perspective = 400;\n\nconst YourComponent = (\n  <div style={{ position: \"relative\", perspective: perspective + \"px\" }}>\n    <FollowReveal perspective={perspective}>\n      <div>Lorem ipsum</div>\n    </FollowReveal>\n    <img src=\"background.png\" alt=\"background\" />\n  </div>\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"acknowledgements\"\n    }}>{`Acknowledgements`}</h2>\n    <p>{`Adapted from `}<a parentName=\"p\" {...{\n        \"href\": \"https://codepen.io/noeldelgado/pen/pGwFx\"\n      }}>{`https://codepen.io/noeldelgado/pen/pGwFx`}</a></p>\n    <h2 {...{\n      \"id\": \"limitations\"\n    }}>{`Limitations`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Special perspective styling (like \\`perspective-origin) is not taken into account. (PR's for this are welcome)`}</li>\n      <li parentName=\"ul\">{`A separate element is needed to catch mouse events and measure the size of the animated component.\nIn order to allow multiple reveals to use the same perspective container any layout styling applied to\nthe animated element has to be duplicated for the separate elements with the `}<inlineCode parentName=\"li\">{`className`}</inlineCode>{` prop.\nIt is still possible to use one perspective container per animated component and put these in the desired layout,\nwhich doesn't require passing the `}<inlineCode parentName=\"li\">{`className`}</inlineCode>{` for that layout. (See the FollowReveal Grid example)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"contributing\"\n    }}>{`Contributing`}</h2>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"./CONTRIBUTING.md\"\n      }}>{`CONTRIBUTING.md`}</a></p>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`GNU GPL v3.0 Â© `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cdfa\"\n      }}>{`cdfa`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport ReadMe from \"README.md\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <ReadMe mdxType=\"ReadMe\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}